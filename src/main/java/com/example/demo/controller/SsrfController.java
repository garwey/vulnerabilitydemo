package com.example.demo.controller;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.servlet.http.HttpServletRequest;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;

@Controller
@RequestMapping("/ssrf")
public class SsrfController {
    @GetMapping(value = "/urlConnection")
    public String urlConnection(HttpServletRequest request) throws Exception {
        String u = request.getParameter("url");
        if (u == null) {
            return "SSRF";
        }
        URL url = new URL(u);
        URLConnection con = url.openConnection();
        InputStream inputStream = con.getInputStream();
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream, "UTF-8");
        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        StringBuilder stringBuilder = new StringBuilder();
        String line;
        while ((line = bufferedReader.readLine()) != null) {
            stringBuilder.append(line);
        }
        request.setAttribute("line1", stringBuilder.toString());
        return "SSRF";
    }

    @RequestMapping("openStream")
    public String openStream(HttpServletRequest request) throws IOException {
        String u = request.getParameter("url");
        if (u == null) {
            return "SSRF";
        }
        URL url = new URL(u);
        InputStream inputStream = url.openStream();
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
        StringBuilder stringBuilder = new StringBuilder();
        String line2;
        while ((line2 = bufferedReader.readLine()) != null) {
            stringBuilder.append(line2);
        }
        request.setAttribute("line2", stringBuilder.toString());
        return "SSRF";
    }

    @RequestMapping("httpClients")
    public String httpClients(HttpServletRequest request) throws IOException {
        String url = request.getParameter("url");
        if (url == null) {
            return "SSRF";
        }
        CloseableHttpClient client = HttpClients.createDefault();
        HttpGet httpGet = new HttpGet(url);
        HttpResponse httpResponse = client.execute(httpGet);
        HttpEntity entity = httpResponse.getEntity();
        request.setAttribute("line3", EntityUtils.toString(entity, "utf-8"));
        return "SSRF";
    }
}
