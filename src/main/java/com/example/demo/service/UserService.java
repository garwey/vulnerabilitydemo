package com.example.demo.service;

import com.example.demo.DemoApplication;
import com.example.demo.dao.UserDao;
import com.example.demo.entity.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.sql.*;
import java.util.List;

@Service
public class UserService {
    @Autowired
    private UserDao userDao;

    public List<User> findAll() {
        return userDao.findAll();
    }

    public User findOne(int id) {
        return userDao.findOne(id);
    }

    public int insertOne(User user) {
        return userDao.insertOne(user);
    }

    public List<User> getByName(String username) {
//        String sql = "select * from user where username='" + username + "'";
//        return getUserSqlInjectable(sql);
        return userDao.getByName(username);
    }

    public User getById(String id) {
        String sql = "select * from user where id='" + id + "'";
        return getUserSqlInjectable(sql);
    }

    public User getByIdUsername(String id, String username) {
        String sql = "select * from user where id=" + id + " and username='" + username + "'root";
        return getUserSqlInjectable(sql);
    }

    private User getUserSqlInjectable(String sql) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        User user = null;
        try {
            Class.forName(DemoApplication.config.getProperty("spring.datasource.driver-class-name")).newInstance();
            connection = DriverManager.getConnection(
                    DemoApplication.config.getProperty("spring.datasource.url"),
                    DemoApplication.config.getProperty("spring.datasource.username"),
                    DemoApplication.config.getProperty("spring.datasource.password"));
            preparedStatement = connection.prepareStatement(sql); // 可SQL注入
//            preparedStatement = connection.prepareStatement("select * from user where id=?");
//            preparedStatement.setString(1, id);
            ResultSet result = preparedStatement.executeQuery();
            if (result.next()) {
                user = new User();
                user.setId(result.getInt("id"));
                user.setUsername(result.getString("username"));
                user.setPassword(result.getString("password"));
                user.setName(result.getString("name"));
                user.setDescription(result.getString("description"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) connection.close();
                if (preparedStatement != null) preparedStatement.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return user;
    }

}
